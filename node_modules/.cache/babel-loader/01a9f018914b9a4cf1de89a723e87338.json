{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [inSession, setInSession] = useState(false);\n  const [breakIntervalState, setBreakIntervalState] = useState(5);\n  const [focusIntervalState, setFocusIntervalState] = useState(25);\n  const [timeRemainingState, setTimeRemainingState] = useState(5);\n\n  const increaseByFive = () => {\n    if (inSession) return;\n    if (focusIntervalState === 60) return;\n    setFocusIntervalState(current => current + 5);\n    setTimeRemainingState(current => current + 300);\n  };\n\n  const decreaseByFive = () => {\n    if (inSession) return;\n    if (focusIntervalState === 5) return;\n    setFocusIntervalState(current => current - 5);\n    setTimeRemainingState(current => current - 300);\n  };\n\n  const increaseByOne = () => {\n    if (inSession) return;\n    if (breakIntervalState === 15) return;\n    setBreakIntervalState(current => current + 1);\n  };\n\n  const decreaseByOne = () => {\n    if (inSession) return;\n    if (breakIntervalState === 1) return;\n    setBreakIntervalState(current => current - 1);\n  };\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setTimeRemainingState(current => current - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  if (timeRemainingState === 0) {\n    new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play();\n  }\n\n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setOnBreak(prevState => !prevState);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false);\n    setOnBreak(false);\n    setIsTimerRunning(false);\n    setBreakIntervalState(5);\n    setFocusIntervalState(25);\n    setTimeRemainingState(1500);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusInterval, {\n    focusInterval: focusIntervalState,\n    inSession: inSession,\n    upByFive: increaseByFive,\n    downByFive: decreaseByFive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakInterval, {\n    breakInterval: breakIntervalState,\n    upByOne: increaseByOne,\n    downByOne: decreaseByOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayPause, {\n    playPause: playPause,\n    stopSession: stopSession,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    inSession: inSession,\n    onBreak: onBreak,\n    focusInterval: focusIntervalState,\n    breakInterval: breakIntervalState,\n    timeRemainingState: timeRemainingState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","BreakInterval","FocusInterval","PlayPause","Timer","Pomodoro","isTimerRunning","setIsTimerRunning","onBreak","setOnBreak","inSession","setInSession","breakIntervalState","setBreakIntervalState","focusIntervalState","setFocusIntervalState","timeRemainingState","setTimeRemainingState","increaseByFive","current","decreaseByFive","increaseByOne","decreaseByOne","Audio","process","env","PUBLIC_URL","play","playPause","prevState","stopSession"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [inSession, setInSession] = useState(false);\n\n  const [breakIntervalState, setBreakIntervalState] = useState(5)\n  const [focusIntervalState, setFocusIntervalState] = useState(25)\n  const [timeRemainingState, setTimeRemainingState] = useState(5)\n\n  const increaseByFive = () => {\n    if(inSession) return;\n    if (focusIntervalState === 60) return;\n    setFocusIntervalState((current) => current + 5)\n    setTimeRemainingState((current) => current + 300)\n  } \n  const decreaseByFive = () => {\n    if(inSession) return;\n    if (focusIntervalState === 5) return;\n    setFocusIntervalState((current) => current - 5)\n    setTimeRemainingState((current) => current - 300)\n  } \n  const increaseByOne = () => {\n    if(inSession) return;\n    if (breakIntervalState === 15) return;\n    setBreakIntervalState((current) => current + 1)\n  } \n  const decreaseByOne = () => {\n    if(inSession) return;\n    if (breakIntervalState === 1) return;\n    setBreakIntervalState((current) => current - 1)\n  }\n  \n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      setTimeRemainingState((current) => current - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  if (timeRemainingState === 0) {\n    new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play();\n  }\n\n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setOnBreak((prevState) => !prevState);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false); setOnBreak(false); setIsTimerRunning(false);\n    setBreakIntervalState(5); setFocusIntervalState(25); setTimeRemainingState(1500);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusInterval focusInterval={focusIntervalState} inSession={inSession} upByFive={increaseByFive} downByFive={decreaseByFive} />\n        <BreakInterval breakInterval={breakIntervalState} upByOne={increaseByOne} downByOne={decreaseByOne} />\n      </div>\n      <PlayPause playPause={playPause} stopSession={stopSession} isTimerRunning={isTimerRunning} />\n      <Timer inSession={inSession} onBreak={onBreak} focusInterval={focusIntervalState} breakInterval={breakIntervalState} timeRemainingState={timeRemainingState} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}