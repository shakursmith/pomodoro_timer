{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Timer.js\";\nimport React from 'react';\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\n\nfunction Timer(props) {\n  let secondsRemaining = props.focusInterval * 60;\n  console.log(secondsToDuration(secondsRemaining));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    style: props.isTimerRunning ? {\n      display: \"block\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, \"Focusing for \", minutesToDuration(props.focusInterval), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, secondsToDuration(secondsRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Timer.js"],"names":["React","minutesToDuration","secondsToDuration","Timer","props","secondsRemaining","focusInterval","console","log","isTimerRunning","display","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAoD,mBAApD;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,MAAIC,gBAAgB,GAAGD,KAAK,CAACE,aAAN,GAAoB,EAA3C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAiB,CAACG,gBAAD,CAA7B;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAED,KAAK,CAACK,cAAN,GAAuB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAvB,GAA4C;AAACA,MAAAA,OAAO,EAAE;AAAV,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8CT,iBAAiB,CAACG,KAAK,CAACE,aAAP,CAA/D,aAFJ,eAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,iBAAiB,CAACG,gBAAD,CADlB,eAJJ,CADJ,CAFJ,eAYI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAc,GALlB,CAKsB;AALtB;AAMI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANX,CAM4B;AAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADJ,CAZJ,CADJ;AA6BH;;AAED,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport { minutesToDuration, secondsToDuration} from '../utils/duration';\n\nfunction Timer(props) {\n    let secondsRemaining = props.focusInterval*60;\n    \n    console.log(secondsToDuration(secondsRemaining))\n    \n    return (\n        <div>\n            {/* TODO: This area should show only when a focus or break session is running or pauses */}\n            <div className=\"row mb-2\" style={props.isTimerRunning ? {display: \"block\"} : {display: \"none\"}}>\n                <div className=\"col\">\n                    {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n                    <h2 data-testid=\"session-title\">Focusing for {minutesToDuration(props.focusInterval)} minutes</h2>\n                    {/* TODO: Update message below to include time remaining in the current session */}\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {secondsToDuration(secondsRemaining)} remaining\n                    </p>\n                </div>\n            </div>\n            <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\n                    <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                        style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n                    />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}