{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [inSession, setInSession] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [breakIntervalState, setBreakIntervalState] = useState(5);\n  const [focusIntervalState, setFocusIntervalState] = useState(25);\n  const [timeRemainingState, setTimeRemainingState] = useState(5);\n\n  const increaseByFive = () => {\n    if (inSession) return;\n    if (focusIntervalState === 60) return;\n    setFocusIntervalState(current => current + 5);\n    setTimeRemainingState(current => current + 300);\n  };\n\n  const decreaseByFive = () => {\n    if (inSession) return;\n    if (focusIntervalState === 5) return;\n    setFocusIntervalState(current => current - 5);\n    setTimeRemainingState(current => current - 300);\n  };\n\n  const increaseByOne = () => {\n    if (inSession) return;\n    if (breakIntervalState === 15) return;\n    setBreakIntervalState(current => current + 1);\n  };\n\n  const decreaseByOne = () => {\n    if (inSession) return;\n    if (breakIntervalState === 1) return;\n    setBreakIntervalState(current => current - 1);\n  };\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setTimeRemainingState(current => current - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setIsPaused(prevState => !prevState);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false);\n    setOnBreak(false);\n    setIsPaused(false);\n    setIsTimerRunning(false);\n    setBreakIntervalState(5);\n    setFocusIntervalState(25);\n    setTimeRemainingState(1500);\n  }\n\n  const alarm = new Audio('https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg');\n\n  if (timeRemainingState === 0) {\n    if (onBreak) {\n      alarm.play();\n      stopSession();\n    } else {\n      alarm.play();\n      setOnBreak(true);\n      if (onBreak) setTimeRemainingState(breakIntervalState * 60);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusInterval, {\n    focusInterval: focusIntervalState,\n    inSession: inSession,\n    upByFive: increaseByFive,\n    downByFive: decreaseByFive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakInterval, {\n    breakInterval: breakIntervalState,\n    upByOne: increaseByOne,\n    downByOne: decreaseByOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayPause, {\n    playPause: playPause,\n    stopSession: stopSession,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    timeRemainingState: timeRemainingState,\n    inSession: inSession,\n    onBreak: onBreak,\n    isPaused: isPaused,\n    focusInterval: focusIntervalState,\n    breakInterval: breakIntervalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","BreakInterval","FocusInterval","PlayPause","Timer","Pomodoro","isTimerRunning","setIsTimerRunning","isPaused","setIsPaused","inSession","setInSession","onBreak","setOnBreak","breakIntervalState","setBreakIntervalState","focusIntervalState","setFocusIntervalState","timeRemainingState","setTimeRemainingState","increaseByFive","current","decreaseByFive","increaseByOne","decreaseByOne","playPause","prevState","stopSession","alarm","Audio","play"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [inSession, setInSession] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n\n  const [breakIntervalState, setBreakIntervalState] = useState(5)\n  const [focusIntervalState, setFocusIntervalState] = useState(25)\n  const [timeRemainingState, setTimeRemainingState] = useState(5)\n\n  const increaseByFive = () => {\n    if(inSession) return;\n    if (focusIntervalState === 60) return;\n    setFocusIntervalState((current) => current + 5)\n    setTimeRemainingState((current) => current + 300)\n  } \n  const decreaseByFive = () => {\n    if(inSession) return;\n    if (focusIntervalState === 5) return;\n    setFocusIntervalState((current) => current - 5)\n    setTimeRemainingState((current) => current - 300)\n  } \n  const increaseByOne = () => {\n    if(inSession) return;\n    if (breakIntervalState === 15) return;\n    setBreakIntervalState((current) => current + 1)\n  } \n  const decreaseByOne = () => {\n    if(inSession) return;\n    if (breakIntervalState === 1) return;\n    setBreakIntervalState((current) => current - 1)\n  }\n  \n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      setTimeRemainingState((current) => current - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  \n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setIsPaused((prevState) => !prevState);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n  \n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false); setOnBreak(false); setIsPaused(false); setIsTimerRunning(false);\n    setBreakIntervalState(5); setFocusIntervalState(25); setTimeRemainingState(1500);\n  }\n\n  const alarm = new Audio('https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg')\n  if (timeRemainingState === 0) {\n    if (onBreak) {\n      alarm.play();\n      stopSession();\n    } else {\n      alarm.play();\n      setOnBreak(true);\n      if (onBreak) setTimeRemainingState(breakIntervalState*60)\n    }\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusInterval focusInterval={focusIntervalState} inSession={inSession} upByFive={increaseByFive} downByFive={decreaseByFive} />\n        <BreakInterval breakInterval={breakIntervalState} upByOne={increaseByOne} downByOne={decreaseByOne} />\n      </div>\n      <PlayPause playPause={playPause} stopSession={stopSession} isTimerRunning={isTimerRunning} />\n      <Timer timeRemainingState={timeRemainingState} inSession={inSession} onBreak={onBreak} isPaused={isPaused} focusInterval={focusIntervalState} breakInterval={breakIntervalState} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}