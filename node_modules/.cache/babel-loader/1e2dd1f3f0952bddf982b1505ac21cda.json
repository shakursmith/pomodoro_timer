{"ast":null,"code":"var _jsxFileName = \"/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakIntervalState, setBreakIntervalState] = useState(5);\n  const [focusIntervalState, setFocusIntervalState] = useState(25);\n\n  const increaseByFive = () => setFocusIntervalState(current => current + 5);\n\n  const decreaseByFive = () => setFocusIntervalState(current => current - 5);\n\n  const increaseByOne = () => setFocusIntervalState(current => current + 1);\n\n  const decreaseByOne = () => setFocusIntervalState(current => current - 1);\n\n  useInterval(() => {// ToDo: Implement what should happen when the timer is running\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusInterval, {\n    focusInterval: focusIntervalState,\n    upByFive: increaseByFive,\n    downByFive: decreaseByFive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakInterval, {\n    breakInterval: breakIntervalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayPause, {\n    playPause: playPause,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    isTimerRunning: isTimerRunning,\n    focusInterval: focusIntervalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/shakur/www/qualifiedChallenges/Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","BreakInterval","FocusInterval","PlayPause","Timer","Pomodoro","isTimerRunning","setIsTimerRunning","breakIntervalState","setBreakIntervalState","focusIntervalState","setFocusIntervalState","increaseByFive","current","decreaseByFive","increaseByOne","decreaseByOne","playPause","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMa,cAAc,GAAG,MAAMD,qBAAqB,CAAEE,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAlD;;AACA,QAAMC,cAAc,GAAG,MAAMH,qBAAqB,CAAEE,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAlD;;AACA,QAAME,aAAa,GAAG,MAAMJ,qBAAqB,CAAEE,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjD;;AACA,QAAMG,aAAa,GAAG,MAAML,qBAAqB,CAAEE,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjD;;AAEAb,EAAAA,WAAW,CACT,MAAM,CACJ;AAED,GAJQ,EAKTM,cAAc,GAAG,IAAH,GAAU,IALf,CAAX;;AAQA,WAASW,SAAT,GAAqB;AACnBV,IAAAA,iBAAiB,CAAEW,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAER,kBAA9B;AAAkD,IAAA,QAAQ,EAAEE,cAA5D;AAA4E,IAAA,UAAU,EAAEE,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEN,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAES,SAAtB;AAAiC,IAAA,cAAc,EAAEX,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAO,IAAA,cAAc,EAAEA,cAAvB;AAAuC,IAAA,aAAa,EAAEI,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakInterval from \"./BreakInterval\";\nimport FocusInterval from \"./FocusInterval\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakIntervalState, setBreakIntervalState] = useState(5)\n  const [focusIntervalState, setFocusIntervalState] = useState(25)\n\n  const increaseByFive = () => setFocusIntervalState((current) => current + 5) \n  const decreaseByFive = () => setFocusIntervalState((current) => current - 5) \n  const increaseByOne = () => setFocusIntervalState((current) => current + 1) \n  const decreaseByOne = () => setFocusIntervalState((current) => current - 1) \n  \n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusInterval focusInterval={focusIntervalState} upByFive={increaseByFive} downByFive={decreaseByFive} />\n        <BreakInterval breakInterval={breakIntervalState} />\n      </div>\n      <PlayPause playPause={playPause} isTimerRunning={isTimerRunning} />\n      <Timer isTimerRunning={isTimerRunning} focusInterval={focusIntervalState} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}